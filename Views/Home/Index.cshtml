@using TARSTestJosue.ViewModels
@model IndexModel
@{
	ViewData["Title"] = "Home Page";
	int pages = Model.Total/Model.Take;
	pages +=  Model.Total != 0 && Model.Total%Model.Take == 0 ?0:1;
}
<input type="hidden" id="pages" value="@pages"/>

<a class="btn btn-primary m-2" asp-action="Edit">New item</a>
<section class="border rounded border-dark">
	<header class="row p-2 m-0 alert-secondary rounded-top">
		<form method="GET" class="col-12 row">
			<fieldset class="col-sm-6">
				<label>Category</label>
				<input class="form-control" value="@Model.Category" name="category"/>
			</fieldset>
			<fieldset class="col-sm-3">
				<label>Take</label>
				<input type="number" min="1" id="take" name="take" class="form-control" value="@Model.Take"/>
			</fieldset>
			<fieldset class="col-3 d-flex align-items-end">
				<input type="submit" class="btn btn-primary" value="Submit"/>
			</fieldset>
			<input type="hidden" id="page" name="page" value="@Model.Page"/>
		</form>

			<fieldset class="col-sm-6 p-2">
				<input class="form-control filter-input" placeholder="filter" />
			</fieldset>
	</header>
	<table class="table table-hover responsive">
		<thead>
			<tr>
				<td>Category</td>
				<td>Name</td>
				<td>Product</td>
				<td>Offers</td>
				<td></td>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model.Items)
			{
			<tr>
				<td>
					@item.Category
				</td>
				<td>
					@item.Name
				</td>
				<td>
					@item.ToString()
				</td>
				<td>
					@item.Prices.Count
				</td>
				<td>
					<div class="btn-group" role="group">
						<form class="form-delete" asp-action="Delete" method="POST">
							@Html.AntiForgeryToken()
							<input type="hidden" name="id" value="@item.Id" />
							<a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
							<input type="submit" class="ml-2 border-0 text-danger" type="button" value="Delete" />
						</form>
					</div>
				</td>
			</tr>
			}
		</tbody>
	</table>
	<span class="d-flex justify-content-center">
		<p>
			Showing <b id="span-showing">@Model.Items.Length</b>
				of <b id="span-total">@Model.Total</b> components
		</p>
	</span>
	<footer class="col-12 d-flex justify-content-center">
		<button class="btn btn-dark btn-prev m-1">Prev</button>
		@for (var i = 1; i <= pages; i++)
		{
			@if(Model.Page == i){
				<button class="btn btn-primary btn-page m-1" data-page="@i">@i</button>
			}else{
				<button class="btn btn-outline-primary btn-page m-1" data-page="@i">@i</button>
			}
		}
		<button class="btn btn-dark btn-next m-1">Next</button>
	</footer>
</section>
